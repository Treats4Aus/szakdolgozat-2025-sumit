package com.example.sumit.data.notes

import androidx.room.ColumnInfo
import androidx.room.Entity
import androidx.room.PrimaryKey
import java.util.Date

/**
 * Represents a locally stored note in Room database.
 */
@Entity(tableName = "notes")
data class Note(
    /**
     * Unique identifier of the note. Automatically generated by Room.
     */
    @PrimaryKey(autoGenerate = true)
    val id: Int = 0,

    /**
     * An identifier that points to the Firestore document of this note's remote counterpart, or
     * null if it hasn't been uploaded yet or sync is turned off.
     */
    @ColumnInfo(name = "firebase_id")
    val firebaseId: String? = null,

    /**
     * An identifier that points to the Firestore user document that owns this note, or null if
     * it hasn't been uploaded yet or sync is turned off.
     */
    @ColumnInfo(name = "owner")
    val owner: String? = null,

    /**
     * The date of creation.
     */
    @ColumnInfo(name = "created")
    val created: Date,

    /**
     * The date of last modification. Used to track which version is the most up-to-date during
     * syncing.
     */
    @ColumnInfo(name = "last_modified")
    val lastModified: Date,

    /**
     * Title of the note.
     */
    @ColumnInfo(name = "title")
    val title: String,

    /**
     * The content of the note, divided into paragraphs with line breaks.
     */
    @ColumnInfo(name = "content")
    val content: String,

    /**
     * The summary of the note as raw text.
     */
    @ColumnInfo(name = "summary")
    val summary: String
)
